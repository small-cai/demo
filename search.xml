<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>有趣的数</title>
      <link href="2021/04/03/you-qu-de-shu/"/>
      <url>2021/04/03/you-qu-de-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="题干描述"><a href="#题干描述" class="headerlink" title="题干描述"></a>题干描述</h2><h3 id="201312-4"><a href="#201312-4" class="headerlink" title="201312-4"></a>201312-4</h3><p>我们把一个数称为有趣的，当且仅当：</p><p>1.它的数字只包含 0,1,2,3，且这四个数字都出现过至少一次。</p><p>2.所有的 0都出现在所有的 1之前，而所有的2都出现在所有的 3 之前。</p><p>3.最高位数字不为0。</p><p>因此，符合我们定义的最小的有趣的数是 2013。</p><p>除此以外 ，4位的有趣的数还有两个：2031 和 2301。</p><p>请计算恰好有n位的有趣的数的个数。</p><p>由于答案可能非常大，只需要输出答案除以10^9+7 的余数。</p><p> <strong>输入格式</strong></p><p>  输入只有一行，包括恰好一个正整数n。</p><p><strong>输出格式</strong></p><p>输出只有一行，包括恰好 n 位的整数中有趣的数的个数除以 10^9+7 的余数。</p><p><strong>数据范围</strong></p><p>4≤n≤1000</p><p><strong>输入样例：</strong></p><p>4 </p><p><strong>输出样例：</strong></p><p>3 </p><h3 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h3><p>根据题干我们需要满足三个要求：</p><p>①0，1，2，3至少出现一次。 ②0在1之前，2在3之前。  ③0不为首位。</p><p>据此我们可以把问题分为若干类。例如：01出现2次，23出现n-2次；01出现3次，23出现n-3次……01出现n-2次，23出现2次。</p><table><thead><tr><th><strong>01</strong>  <strong>（次数）</strong></th><th><strong>2</strong></th><th><strong>3</strong></th><th><strong>4</strong></th><th><strong>…………</strong></th><th><strong>n-2</strong></th></tr></thead><tbody><tr><td>23  (次数）</td><td>n-2</td><td>n-3</td><td>n-4</td><td>……………</td><td>2</td></tr></tbody></table><p>   <u>也即是我们算出每一个组合的方案数相加即为总的方案数。</u></p><img src="C:\Users\PC\AppData\Roaming\Typora\typora-user-images\image-20210403161456814.png" alt="image-20210403161456814" style="zoom:92%;"><p>①对于k位01而言，假设前t位放0的话，后k-t位放1。相应的对于每一个t值，都分别对应一种组合。由于0至少出现一次所以对应又k-1种放法。</p><p>②通里得到23的不同的序列选法为n-k-1</p><p>综合上述，最终，我们可以得到方案数之和公式。</p><p><img src="C:\Users\PC\AppData\Roaming\Typora\typora-user-images\image-20210403161610642.png" alt="image-20210403161610642"></p><p><img src="C:\Users\PC\AppData\Roaming\Typora\typora-user-images\image-20210403162011228.png" alt="image-20210403162011228"></p><p>注：第二种方法</p><p>下面开始探索这样的状态有哪些，以及状态之间的相关性。</p><p>按照题意，</p><p>可以出现的数字类型有0、1、2、3且要求的是n位数字的个数，那么对于一个n位数字，</p><p>可以将其状态定义为：n位中有特定类型数字，且满足0在1前、2在3前的个数。</p><p>具体来说：f(n, 0123)表示前n位中同时出现0、1、2、3且满足0在1前、2在3前的数字个数；</p><p>f(n, 012)表示前n位中同时出现0、1、2且满足0在1前、2在3前的数字个数（当然这里没有3，所有2在3前可以视为妥妥能达到）。</p><p>定义了上述状态后，其实可以比较顺畅地想到状态机dp了。在进行状态转移之前，我们可以剔除掉一些无效状态，即肯定不会出现的状态：f(n, 0) 当n=1时，该状态可以出现，但n&gt;1时，数字不能全是0且n位数大于1，由于本题中满足要求的数字至少4位，所以该状态可以剔除；f(n, 1) f(n, 3)由于1前面必须出现0，3前面必须出现2，所以不可能单独有1和3出现，该状态可剔除；……按照上述类似方法，最终可能出现的状态只能有f(n, 2), f(n, 02), f(n, 01), f(n, 23), f(n, 012), f(n, 023), f(n, 0123)，共6种</p><p><img src="C:\Users\PC\AppData\Roaming\Typora\typora-user-images\image-20210403162154826.png" alt="image-20210403162154826"></p><p><u>注：指向状态0123圈圈的箭头表示，0123状态只能由本身及012和023状态转移过来</u>`</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;cstring&gt;#include &lt;algorithm&gt;#include &lt;iostream&gt;using namespace std;typedef long long LL;const int N = 1010, mod = 1e9 + 7;LL a2, a02, a23, a012, a023, a0123;LL t2, t02, t23, t012, t023, t0123;//默认设为0int n;int main() {    cin &gt;&gt; n;    a2 = 1;    for (int i = 2; i &lt;= n; i++) {        // 备份        t2 = a2, t02 = a02, t23 = a23, t012 = a012, t023 = a023, t0123 = a0123;        a2 = t2 % mod;        // 系数02表示在末尾可以加上0或2两种，下同        a02 = (t2 + 2 * t02) % mod;        a23 = (t2 + t23) % mod;        a012 = (t02 + 2 * t012) % mod;        a023 = (t02 + t23 + 2 * t023) % mod        a0123 = (t012 + t023 + 2 * t0123) % mod;    }    cout &lt;&lt; a0123 &lt;&lt; endl;    return 0;} <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="C:\Users\PC\AppData\Roaming\Typora\typora-user-images\image-20210403162410413.png" alt="image-20210403162410413"></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CCF </tag>
            
            <tag> 组合数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/04/02/hello-world/"/>
      <url>2021/04/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new "My New Post"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
